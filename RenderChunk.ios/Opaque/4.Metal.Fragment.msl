//Instancing=Off
//RenderAsBillboards=Off
//Seasons=Off

#include <metal_stdlib>
#include <simd/simd.h>

using namespace metal;

struct _Global
{
    float4 FogColor;
    float4 GlobalRoughness;
    float4 LightWorldSpaceDirection;
    float4 FogAndDistanceControl;
    float4x4 u_modelViewProj;
    float4 LightDiffuseColorAndIntensity;
    float4x4 u_modelView;
    float4 u_viewRect;
    float4x4 u_model[4];
    float4 ViewPositionAndTime;
    float4 u_alphaRef4;
    float4x4 u_viewProj;
    float4 RenderChunkFogAlpha;
    float4x4 u_invProj;
    float4x4 u_view;
    float4x4 u_proj;
    float4x4 u_invViewProj;
    float4x4 u_invView;
    float4 u_viewTexel;
};

struct xlatMtlMain_out
{
    float4 bgfx_FragData0 [[color(0)]];
};

struct xlatMtlMain_in
{
    float4 v_color0 [[user(locn0)]];
    float4 v_fog [[user(locn1)]];
    float2 v_lightmapUV [[user(locn2)]];
    float2 v_texcoord0 [[user(locn3), centroid_perspective]];
};

fragment xlatMtlMain_out xlatMtlMain(xlatMtlMain_in in [[stage_in]], constant _Global& _mtl_u [[buffer(0)]], texture2d<float> s_MatTexture [[texture(1)]], texture2d<float> s_LightMapTexture [[texture(2)]], sampler s_MatTextureSampler [[sampler(1)]], sampler s_LightMapTextureSampler [[sampler(2)]])
{
    xlatMtlMain_out out = {};
    float4 _842 = in.v_color0;
    float4 _652 = s_MatTexture.sample(s_MatTextureSampler, in.v_texcoord0);
    float3 _630 = _652.xyz * in.v_color0.xyz;
    float4 _619 = float4(_630.x, _630.y, _630.z, _652.w);
    _619.w = _842.w;
    float4 _680 = float4(s_LightMapTexture.sample(s_LightMapTextureSampler, in.v_lightmapUV).xyz * _619.xyz, _619.w);
    float4 _821 = in.v_fog;
    float3 _709 = mix(_680.xyz, _mtl_u.FogColor.xyz, float3(_821.w));
    out.bgfx_FragData0 = float4(_709.x, _709.y, _709.z, _680.w);
    return out;
}

