//Instancing=Off
//RenderAsBillboards=Off
//Seasons=Off

#include <metal_stdlib>
#include <simd/simd.h>

using namespace metal;

struct _Global
{
    float4 FogColor;
    float4 GlobalRoughness;
    float4 LightWorldSpaceDirection;
    float4 FogAndDistanceControl;
    float4x4 u_modelViewProj;
    float4 LightDiffuseColorAndIntensity;
    float4x4 u_modelView;
    float4 u_viewRect;
    float4x4 u_model[4];
    float4 ViewPositionAndTime;
    float4 u_alphaRef4;
    float4x4 u_viewProj;
    float4 RenderChunkFogAlpha;
    float4x4 u_invProj;
    float4x4 u_view;
    float4x4 u_proj;
    float4x4 u_invViewProj;
    float4x4 u_invView;
    float4 u_viewTexel;
};

struct xlatMtlMain_out
{
    float4 bgfx_FragData0 [[color(0)]];
};

struct xlatMtlMain_in
{
    float4 v_color0 [[user(locn0)]];
    float4 v_fog [[user(locn1)]];
    float2 v_lightmapUV [[user(locn2)]];
    float2 v_texcoord0 [[user(locn3), centroid_perspective]];
};

fragment xlatMtlMain_out xlatMtlMain(xlatMtlMain_in in [[stage_in]], constant _Global& _mtl_u [[buffer(0)]], texture2d<float> s_MatTexture [[texture(1)]], texture2d<float> s_LightMapTexture [[texture(2)]], sampler s_MatTextureSampler [[sampler(1)]], sampler s_LightMapTextureSampler [[sampler(2)]])
{
    xlatMtlMain_out out = {};
    float4 _624 = s_MatTexture.sample(s_MatTextureSampler, in.v_texcoord0);
    if (_624.w < 0.5)
    {
        discard_fragment();
    }
    float4 _639 = _624;
    float3 _641 = _639.xyz * in.v_color0.xyz;
    _624 = float4(_641.x, _641.y, _641.z, _639.w);
    float4 _688 = float4(s_LightMapTexture.sample(s_LightMapTextureSampler, in.v_lightmapUV).xyz * _641.xyz, _624.w);
    float4 _834 = in.v_fog;
    float3 _717 = mix(_688.xyz, _mtl_u.FogColor.xyz, float3(_834.w));
    out.bgfx_FragData0 = float4(_717.x, _717.y, _717.z, _688.w);
    return out;
}

